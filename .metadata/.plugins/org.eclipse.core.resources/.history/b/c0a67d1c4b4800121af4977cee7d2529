package com.ibm.fp.scala

object ParallelComputing extends App {

  val max = 1000000

  val runs = 10

  def measure(body: => Unit) = { val b = System.nanoTime; body; (System.nanoTime - b) / 1000000000.0 }

  def stress(l: Seq[Int]) = {

    l.foldLeft(0) { case (l, e) => l + e }

    l.map(_ + 42)

    l.foldLeft(0) { case (l, e) => l + e }

  }

  def benchmark(l: List[Int]) = {
    var c = 0.0
    for (i <- 1 to runs) {
      measure(stress(l))
    }
    c / runs
  }

  val linear = (1 to max).toList

  val parallel = (1 to max).toSeq.par

  println(benchmark(linear))

  println(benchmark(parallel))

}